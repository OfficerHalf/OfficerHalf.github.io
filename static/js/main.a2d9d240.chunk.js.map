{"version":3,"sources":["serviceWorker.ts","constants/routes.ts","components/Project.tsx","constants/strings.ts","components/Transitions/Fade.tsx","components/ContactForm.tsx","components/Home/Home.tsx","components/RootComponents/404.tsx","components/Navigation/TopBar.tsx","components/Common/Footer.tsx","components/Navigation/AppRouter.tsx","components/RootComponents/App.tsx","components/RootComponents/DndTools.tsx","index.tsx","components/Navigation/RootRouter.tsx"],"names":["Boolean","window","location","hostname","match","AppRoute","routes","root","home","base","contact","Project","props","react","card","className","title","extra","href","link","target","rel","style","margin","description","projects","styles","entering","opacity","entered","exiting","exited","Fade","_props$ease","ease","_props$timeout","timeout","inProp","in","children","rest","Object","objectWithoutProperties","startStyle","transition","concat","transitionTimingFunction","Transition","assign","state","objectSpread","ContactForm","_React$useState","React","_React$useState2","slicedToArray","loading","setLoading","spin","Fade_Fade","cx","src","onLoad","Home","map","project","Project_Project","key","ContactForm_ContactForm","FourZeroFour","withRouter","id","empty","react_router_dom","to","es_button","type","TopBar","color","paddingRight","divider","menu","mode","theme","lineHeight","display","Item","Footer","icon","backgroundColor","borderColor","boxShadow","marginLeft","float","Header","Layout","Content","Router","layout","padding","minHeight","react_router","exact","path","component","AppRouter_Footer","Footer_Footer","App","AppRouter_Router","DndTools","ReactDOM","render","react_default","a","createElement","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2d9d240.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const routes = {\r\n  app: {\r\n    root: '/',\r\n    home: {\r\n      base: '/'\r\n    },\r\n    contact: {\r\n      base: '/contact'\r\n    }\r\n  },\r\n  dndTools: {\r\n    root: '/dnd'\r\n  }\r\n};\r\n\r\nexport enum AppRoute {\r\n  Home = '/',\r\n  Contact = '/contact'\r\n}\r\n","import * as React from 'react';\r\nimport { Card } from 'antd';\r\nimport '../styles/components/Project.scss';\r\n\r\nexport interface ProjectProps {\r\n  title: string;\r\n  description: string;\r\n  link: string;\r\n}\r\n\r\nexport const Project: React.FC<ProjectProps> = props => {\r\n  return (\r\n    <Card\r\n      className=\"project\"\r\n      title={props.title}\r\n      extra={\r\n        <a\r\n          className=\"project-more-link\"\r\n          href={props.link}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          More\r\n        </a>\r\n      }\r\n      style={{ margin: 8 }}\r\n    >\r\n      <p className=\"project-description\" style={{ margin: 0 }}>\r\n        {props.description}\r\n      </p>\r\n    </Card>\r\n  );\r\n};\r\n","import { ProjectProps } from '../components/Project';\r\n\r\nexport const contactForm =\r\n  'https://docs.google.com/forms/d/e/1FAIpQLScLKJVojwvtY0TpBPYfaUQEhKjQfa2iAZsitp3iRxkEoAYvmw/viewform?embedded=true';\r\n\r\nexport const projects: ProjectProps[] = [\r\n  {\r\n    title: 'Homebrewery Markdown Preview',\r\n    description:\r\n      'An extension for Visual Studio Code that formats the markdown preview in the same manner as the Homebrewery',\r\n    link:\r\n      'https://marketplace.visualstudio.com/items?itemName=officerhalf.homebrewery-vscode'\r\n  },\r\n  {\r\n    title: 'Alloy Theme',\r\n    description:\r\n      'A more monochromatic, desaturated Monokai theme for Visual Studio Code, PrismJS, and Conemu.',\r\n    link:\r\n      'https://marketplace.visualstudio.com/items?itemName=officerhalf.alloy-theme'\r\n  },\r\n  {\r\n    title: \"The Captain's Hooks\",\r\n    description: 'A collection of useful React utility hooks.',\r\n    link: 'https://www.npmjs.com/package/the-captains-hooks'\r\n  }\r\n];\r\n","import * as React from 'react';\r\nimport { TransitionProps } from 'react-transition-group/Transition';\r\nimport { Transition } from 'react-transition-group';\r\nimport { TransitionStyles } from '../../interfaces/TransitionStyles';\r\n\r\nconst styles: TransitionStyles = {\r\n  entering: { opacity: 1 },\r\n  entered: { opacity: 1 },\r\n  exiting: { opacity: 0 },\r\n  exited: { opacity: 0 }\r\n};\r\n\r\ninterface FadeProps {\r\n  in: boolean;\r\n  ease?: 'ease' | 'linear' | 'ease-in' | 'ease-out' | 'ease-in-out';\r\n  timeout?: number;\r\n}\r\n\r\nexport const Fade: React.FC<FadeProps & Partial<TransitionProps>> = props => {\r\n  const { ease = 'ease', timeout = 300, in: inProp, children, ...rest } = props;\r\n\r\n  const startStyle: React.CSSProperties = {\r\n    opacity: 0,\r\n    transition: `opacity ${timeout}ms`,\r\n    transitionTimingFunction: ease\r\n  };\r\n  return (\r\n    <Transition timeout={timeout} in={inProp} {...rest}>\r\n      {state => (\r\n        <div style={{ ...startStyle, ...styles[state] }} children={children} />\r\n      )}\r\n    </Transition>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport cx from 'classnames';\r\nimport '../styles/components/Contact.scss';\r\nimport { Spin } from 'antd';\r\nimport { contactForm } from '../constants/strings';\r\nimport { Fade } from './Transitions/Fade';\r\n\r\nexport const ContactForm: React.FC = props => {\r\n  const [loading, setLoading] = React.useState<boolean>(true);\r\n  return (\r\n    <div className=\"contact-wrapper\">\r\n      {loading && <Spin className=\"contact-spinner\" />}\r\n      <Fade in={!loading}>\r\n        <iframe\r\n          className={cx('contact-iframe')}\r\n          src={contactForm}\r\n          title=\"Contact Me\"\r\n          onLoad={() => setLoading(false)}\r\n        />\r\n      </Fade>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Project } from '../Project';\r\nimport { projects } from '../../constants/strings';\r\nimport { ContactForm } from '../ContactForm';\r\nimport '../../styles/components/Home/Home.scss';\r\n\r\nexport const Home: React.FC = props => {\r\n  return (\r\n    <div className=\"home-wrapper\">\r\n      <div className=\"home-section\">\r\n        <div className=\"home-section-inner\">\r\n          <h2>About</h2>\r\n          <p>\r\n            Nathan Smith is an Associate Software Developer at Bentley Systems\r\n            where he writes full-stack enterprise ASP.NET Core and TypeScript +\r\n            React web applications and maintains a CSS + React UI library. In\r\n            his spare time he plays tabletop and video games and takes pictures\r\n            of his cats.\r\n          </p>\r\n        </div>\r\n        <div className=\"home-section-inner home-section-inner-projects\">\r\n          <h2>Projects</h2>\r\n          <div className=\"home-project-grid\">\r\n            {projects.map(project => (\r\n              <Project {...project} key={project.title} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"home-section\">\r\n        <ContactForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { routes } from '../../constants/routes';\r\nimport { RouteComponentProps, withRouter, Link } from 'react-router-dom';\r\nimport { Empty, Button } from 'antd';\r\nimport '../../styles/components/RootComponents/404.scss';\r\n\r\nconst FourZeroFourBase: React.FC<RouteComponentProps> = props => (\r\n  <div id=\"not-found\">\r\n    <Empty\r\n      description={<span>Something went wrong or there is nothing here.</span>}\r\n    >\r\n      <Link to={routes.app.home.base}>\r\n        <Button type=\"primary\">Return Home</Button>\r\n      </Link>\r\n    </Empty>\r\n  </div>\r\n);\r\n\r\nexport const FourZeroFour = withRouter(FourZeroFourBase);\r\n","import * as React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Menu, Divider } from 'antd';\r\n\r\nconst TopBarBase: React.FC<RouteComponentProps> = props => {\r\n  return (\r\n    <>\r\n      <span className=\"logo\" style={{ color: 'white', paddingRight: 20 }}>\r\n        Nathan Smith\r\n      </span>\r\n      <Divider type=\"vertical\" />\r\n      <Menu\r\n        mode=\"horizontal\"\r\n        theme=\"dark\"\r\n        style={{ lineHeight: '64px', display: 'inline-block' }}\r\n      >\r\n        <Menu.Item>Home</Menu.Item>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TopBar = withRouter(TopBarBase);\r\n","import * as React from 'react';\r\nimport { Button } from 'antd';\r\n\r\nexport const Footer: React.FC = props => (\r\n  <div>\r\n    Find me here:\r\n    <Button\r\n      icon=\"github\"\r\n      style={{\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent',\r\n        boxShadow: 'none',\r\n        marginLeft: 4\r\n      }}\r\n      href=\"https://github.com/OfficerHalf\"\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n    />\r\n    <Button\r\n      icon=\"linkedin\"\r\n      style={{\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'transparent',\r\n        boxShadow: 'none'\r\n      }}\r\n      href=\"https://www.linkedin.com/in/nathan-r-smith/\"\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n    />\r\n    <span style={{ float: 'right' }}>© Nathan Smith 2019</span>\r\n  </div>\r\n);\r\n","import * as React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { routes } from '../../constants/routes';\r\nimport { Home } from '../Home/Home';\r\nimport { ContactForm } from '../ContactForm';\r\nimport { FourZeroFour } from '../RootComponents/404';\r\nimport { TopBar } from './TopBar';\r\nimport { Footer as AppFooter } from '../Common/Footer';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nexport const Router: React.FC = props => (\r\n  <Layout className=\"layout\">\r\n    <Header>\r\n      <TopBar />\r\n    </Header>\r\n    <Content style={{ padding: '50px 50px 0px 50px' }}>\r\n      <div style={{ backgroundColor: 'white', padding: 24, minHeight: 280 }}>\r\n        <Switch>\r\n          <Route exact path={routes.app.contact.base} component={ContactForm} />\r\n          <Route exact path={routes.app.home.base} component={Home} />\r\n          <Route component={FourZeroFour} />\r\n        </Switch>\r\n      </div>\r\n    </Content>\r\n    <Footer>\r\n      <AppFooter />\r\n    </Footer>\r\n  </Layout>\r\n);\r\n","import * as React from 'react';\r\nimport { Router } from '../Navigation/AppRouter';\r\n\r\nexport const App: React.FC = props => (\r\n  <>\r\n    <Router />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import * as React from 'react';\r\n\r\nexport const DndTools: React.FC = props => <div>DndTools</div>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from './components/Navigation/RootRouter';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(<Router />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import * as React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { routes } from '../../constants/routes';\r\nimport { App } from '../RootComponents/App';\r\nimport { DndTools } from '../RootComponents/DndTools';\r\n\r\nexport const Router: React.FC = props => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path={routes.dndTools.root} component={DndTools} />\r\n      <Route path={routes.app.root} component={App} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n"],"sourceRoot":""}