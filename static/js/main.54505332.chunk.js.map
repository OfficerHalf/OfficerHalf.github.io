{"version":3,"sources":["styles/Theme.ts","constants/routes.ts","components/TopBar.tsx","constants/links.ts","components/BioCard/Header.tsx","constants/strings.ts","components/BioCard/Body.tsx","components/BioCard/Footer.tsx","components/BioCard/BioCard.tsx","components/Home.tsx","api/butter.ts","store/BlogContext.tsx","components/BlogPostCard/BlogPostCard.tsx","components/BlogPost/BlogPost.tsx","components/Blog.tsx","components/Projects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","routes","home","base","projects","blog","post","template","value","slug","concat","useStyles","makeStyles","root","flexGrow","appBar","flexDirection","tabs","TopBar","withRouter","props","classes","react","className","AppBar","position","Tabs","path","location","pathname","startsWith","getTab","onChange","event","history","push","indicatorColor","Tab","label","IconButton","color","index_es","Email","links","createStyles","media","width","height","backgroundPosition","Header","CardMedia","image","CondensedHeader","_React$useState","React","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","CardHeader","avatar","Avatar","src","title","action","onClick","currentTarget","MoreVert","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","component","href","target","rel","ListItemIcon","ListItemText","bio","CondensedBody","CardContent","Body","Typography","variant","gutterBottom","actions","justifyContent","Footer","CardActions","maxWidth","BioCard","_props$condensed","condensed","header","Header_CondensedHeader","Header_Header","body","Body_CondensedBody","Body_Body","footer","Footer_Footer","Card","undefined","padding","spacing","Home","Container","Grid","container","item","sm","BioCard_BioCard","awBeans","butter","classCallCheck","this","client","Axios","create","baseURL","params","auth_token","createClass","key","get","then","postData","data","BlogContext","posts","getPosts","BlogProvider","_React$Component","_this","possibleConstructorReturn","getPrototypeOf","call","api","state","inherits","Provider","children","_this2","postResponse","console","log","setState","Consumer","card","display","minHeight","cardContent","BlogPostCard","featured","CardActionArea","fields","moment","publish_date","format","summary","card_image","marginBottom","BlogPost","match","foundPost","find","p","header_image","Box","align","subtitle","dangerouslySetInnerHTML","__html","Blog","context","Helmet_default","a","name","content","react_router","exact","map","Projects","App","react_default","createElement","Fragment","react_router_dom","CssBaseline","BlogContext_BlogProvider","ThemeProvider","Theme","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54505332.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { amber } from \"@material-ui/core/colors\";\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       main: \"#2962ff\"\r\n//     },\r\n//     secondary: amber\r\n//   }\r\n// });\r\n\r\nconst theme = createMuiTheme();\r\n\r\nexport default theme;\r\n","export const routes = {\r\n  home: {\r\n    base: \"/\"\r\n  },\r\n  projects: {\r\n    base: \"/projects\"\r\n  },\r\n  blog: {\r\n    base: \"/blog\",\r\n    post: {\r\n      template: \"/blog/post/:slug\",\r\n      value: (slug: string) => `/blog/post/${slug}`\r\n    }\r\n  }\r\n};\r\n","import * as React from \"react\";\r\nimport { IconButton, makeStyles, AppBar, Tabs, Tab } from \"@material-ui/core\";\r\nimport { GithubCircle, LinkedinBox } from \"mdi-material-ui\";\r\nimport { Email } from \"@material-ui/icons\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { routes } from \"../constants/routes\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  appBar: {\r\n    flexDirection: \"row\"\r\n  },\r\n  tabs: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst TopBarComponent: React.FC<RouteComponentProps> = props => {\r\n  const classes = useStyles();\r\n\r\n  function handleChange(event: React.ChangeEvent<{}>, value: string) {\r\n    props.history.push(value);\r\n  }\r\n\r\n  function getTab(): string {\r\n    const path = props.location.pathname;\r\n    if (path.startsWith(routes.projects.base)) {\r\n      return routes.projects.base;\r\n    } else if (path.startsWith(routes.blog.base)) {\r\n      return routes.blog.base;\r\n    } else {\r\n      return routes.home.base;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Tabs\r\n          value={getTab()}\r\n          onChange={handleChange}\r\n          className={classes.tabs}\r\n          indicatorColor=\"secondary\"\r\n        >\r\n          <Tab label=\"Home\" value={routes.home.base} />\r\n          <Tab label=\"Projects\" value={routes.projects.base} />\r\n          <Tab label=\"Blog\" value={routes.blog.base} />\r\n        </Tabs>\r\n        <IconButton color=\"inherit\">\r\n          <GithubCircle />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\">\r\n          <LinkedinBox />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\">\r\n          <Email />\r\n        </IconButton>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TopBar = withRouter(TopBarComponent);\r\n","export const links = {\r\n  email: \"mailto:nathan@nathan-smith.org\",\r\n  github: \"https://github.com/OfficerHalf/\",\r\n  linkedin: \"https://www.linkedin.com/in/nathan-r-smith/\"\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  CardMedia,\r\n  CardHeader,\r\n  Avatar,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport { GithubCircle, LinkedinBox } from \"mdi-material-ui\";\r\nimport { MoreVert, Email } from \"@material-ui/icons\";\r\n\r\nimport { links } from \"../../constants/links\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    media: {\r\n      width: 275,\r\n      height: 275,\r\n      backgroundPosition: \"top\"\r\n    }\r\n  })\r\n);\r\n\r\nexport const Header: React.FC = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CardMedia\r\n      image=\"https://cdn.buttercms.com/Tg7ZPzeRaOVxhFyTVImj\"\r\n      classes={{ root: classes.media }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const CondensedHeader: React.FC = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n  function handleClick(event: React.MouseEvent<HTMLElement>) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar src=\"https://cdn.buttercms.com/Tg7ZPzeRaOVxhFyTVImj\">\r\n            NS\r\n          </Avatar>\r\n        }\r\n        title=\"Nathan Smith\"\r\n        action={\r\n          <IconButton onClick={handleClick}>\r\n            <MoreVert />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <Menu\r\n        id=\"about-menu\"\r\n        keepMounted\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem\r\n          component=\"a\"\r\n          href={links.github}\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n        >\r\n          <ListItemIcon>\r\n            <GithubCircle />\r\n          </ListItemIcon>\r\n          <ListItemText>Github</ListItemText>\r\n        </MenuItem>\r\n        <MenuItem\r\n          component=\"a\"\r\n          href={links.linkedin}\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n        >\r\n          <ListItemIcon>\r\n            <LinkedinBox />\r\n          </ListItemIcon>\r\n          <ListItemText>LinkedIn</ListItemText>\r\n        </MenuItem>\r\n        <MenuItem component=\"a\" href={links.email}>\r\n          <ListItemIcon>\r\n            <Email />\r\n          </ListItemIcon>\r\n          <ListItemText>Email</ListItemText>\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n","export const bio =\r\n  \"Nathan Smith is an Associate Software Developer at Bentley Systems where he mainly writes full-stack enterprise ASP.NET Core and TypeScript + React web applications. In his spare time he plays tabletop and video games and takes pictures of his cats.\";\r\n","import * as React from \"react\";\r\nimport { CardContent, Typography } from \"@material-ui/core\";\r\n\r\nimport { bio } from \"../../constants/strings\";\r\n\r\nexport const CondensedBody: React.FC = props => (\r\n  <CardContent>{bio}</CardContent>\r\n);\r\n\r\nexport const Body: React.FC = props => (\r\n  <CardContent>\r\n    <Typography variant=\"h5\" gutterBottom>\r\n      Nathan Smith\r\n    </Typography>\r\n    {bio}\r\n  </CardContent>\r\n);\r\n","import * as React from \"react\";\r\nimport {\r\n  CardActions,\r\n  IconButton,\r\n  makeStyles,\r\n  createStyles\r\n} from \"@material-ui/core\";\r\nimport { Email } from \"@material-ui/icons\";\r\nimport { GithubCircle, LinkedinBox } from \"mdi-material-ui\";\r\n\r\nimport { links } from \"../../constants/links\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    actions: {\r\n      justifyContent: \"flex-end\"\r\n    }\r\n  })\r\n);\r\n\r\nexport const Footer: React.FC = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CardActions className={classes.actions}>\r\n      <IconButton href={links.github} target=\"_blank\" rel=\"noopener\">\r\n        <GithubCircle />\r\n      </IconButton>\r\n      <IconButton href={links.linkedin} target=\"_blank\" rel=\"noopener\">\r\n        <LinkedinBox />\r\n      </IconButton>\r\n      <IconButton href={links.email}>\r\n        <Email />\r\n      </IconButton>\r\n    </CardActions>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Card, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nimport { Header, CondensedHeader } from \"./Header\";\r\nimport { Body, CondensedBody } from \"./Body\";\r\nimport { Footer } from \"./Footer\";\r\n\r\ninterface BioCardProps {\r\n  condensed?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 275\r\n    }\r\n  })\r\n);\r\n\r\nexport const BioCard: React.FC<BioCardProps> = props => {\r\n  const { condensed = false } = props;\r\n  const header = condensed ? <CondensedHeader /> : <Header />;\r\n  const body = condensed ? <CondensedBody /> : <Body />;\r\n  const footer = condensed ? <></> : <Footer />;\r\n  const classes = useStyles();\r\n  return (\r\n    <Card classes={{ root: condensed ? undefined : classes.root }}>\r\n      {header}\r\n      {body}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Container, Grid, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nimport { BioCard } from \"./BioCard\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 3)\r\n    }\r\n  })\r\n);\r\n\r\nexport const Home: React.FC = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.root}>\r\n      <Grid container spacing={2}>\r\n        <Grid item sm>\r\n          <BioCard condensed />\r\n        </Grid>\r\n        <Grid item sm>\r\n          <BioCard />\r\n        </Grid>\r\n        <Grid item sm>\r\n          <BioCard condensed />\r\n        </Grid>\r\n        <Grid item sm>\r\n          <BioCard condensed />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import Axios, { AxiosInstance } from \"axios\";\r\nimport { GetPostsResponse } from \"../interfaces/GetPostsResponse\";\r\n\r\nconst awBeans: string = \"9ffd3dad4fd54423ad22bc3ce3e1a2fd6bbc9081\";\r\n\r\nexport class butter {\r\n  private client: AxiosInstance;\r\n  constructor() {\r\n    this.client = Axios.create({\r\n      baseURL: \"https://api.buttercms.com/v2/\",\r\n      params: {\r\n        auth_token: awBeans\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPosts(): Promise<GetPostsResponse> {\r\n    return this.client\r\n      .get<GetPostsResponse>(\"pages/blog_post\", {})\r\n      .then(postData => {\r\n        return postData.data;\r\n      });\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { butter } from \"../api/butter\";\r\nimport { BlogPost } from \"../interfaces/BlogPost\";\r\n\r\ninterface ContextProps {\r\n  posts: BlogPost[];\r\n  getPosts: () => void;\r\n}\r\n\r\nexport const BlogContext = React.createContext<ContextProps>({\r\n  posts: [],\r\n  getPosts: () => {}\r\n});\r\n\r\nexport class BlogProvider extends React.Component<{}, ContextProps> {\r\n  private api: butter;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.api = new butter();\r\n    this.state = {\r\n      posts: [],\r\n      getPosts: this.getPosts\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.getPosts();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <BlogContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </BlogContext.Provider>\r\n    );\r\n  }\r\n\r\n  private getPosts(): void {\r\n    this.api.getPosts().then(postResponse => {\r\n      console.log(postResponse.data);\r\n      this.setState({ posts: postResponse.data });\r\n    });\r\n  }\r\n}\r\n\r\nexport const BlogConsumer = BlogContext.Consumer;\r\n","import * as React from \"react\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActionArea,\r\n  makeStyles,\r\n  createStyles,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nimport { routes } from \"../../constants/routes\";\r\nimport { BlogPost } from \"../../interfaces/BlogPost\";\r\n\r\ninterface BlogPostCardProps {\r\n  post: BlogPost;\r\n  featured?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    card: {\r\n      display: \"flex\",\r\n      minHeight: 200\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1\r\n    },\r\n    media: {\r\n      maxWidth: 200\r\n    }\r\n  })\r\n);\r\n\r\nconst BlogPostCardBase: React.FC<\r\n  BlogPostCardProps & RouteComponentProps\r\n> = props => {\r\n  const { post, featured = false, history } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <CardActionArea\r\n      onClick={() => history.push(`${routes.blog.base}/post/${post.slug}`)}\r\n    >\r\n      <Card classes={{ root: classes.card }}>\r\n        <CardContent classes={{ root: classes.cardContent }}>\r\n          <Typography component=\"h2\" variant=\"h5\">\r\n            {post.fields.title}\r\n          </Typography>\r\n          <Typography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\r\n            {moment(post.fields.publish_date).format(\"MMM D, YYYY\")}\r\n          </Typography>\r\n          <Typography>{post.fields.summary}</Typography>\r\n        </CardContent>\r\n        <CardMedia\r\n          component=\"img\"\r\n          src={post.fields.card_image}\r\n          classes={{ root: classes.media }}\r\n        />\r\n      </Card>\r\n    </CardActionArea>\r\n  );\r\n};\r\n\r\nexport const BlogPostCard = withRouter(BlogPostCardBase);\r\n","import * as React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  makeStyles,\r\n  createStyles,\r\n  Box\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nimport { BlogPost as IBlogPost } from \"../../interfaces/BlogPost\";\r\nimport { BlogContext } from \"../../store/BlogContext\";\r\nimport { routes } from \"../../constants/routes\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 3)\r\n    },\r\n    media: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      marginBottom: \"0.35em\"\r\n    },\r\n    body: {\r\n      marginBottom: theme.spacing(3)\r\n    }\r\n  })\r\n);\r\n\r\nexport const BlogPost: React.FC<\r\n  RouteComponentProps<{ slug: string }>\r\n> = props => {\r\n  const slug = props.match.params.slug;\r\n  const classes = useStyles();\r\n\r\n  const context = React.useContext(BlogContext);\r\n  const foundPost = context.posts.find(p => p.slug === slug);\r\n\r\n  if (foundPost === undefined) {\r\n    props.history.push(routes.blog.base);\r\n    return null;\r\n  }\r\n\r\n  const post: IBlogPost = foundPost!;\r\n  return (\r\n    <Container maxWidth=\"md\" classes={{ root: classes.root }}>\r\n      {post.fields.header_image !== \"\" && (\r\n        <Box>\r\n          <img className={classes.media} src={post.fields.header_image} />\r\n        </Box>\r\n      )}\r\n      <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\r\n        {post.fields.title}\r\n      </Typography>\r\n      {post.fields.subtitle !== \"\" && (\r\n        <Typography\r\n          variant=\"h5\"\r\n          component=\"h2\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          {post.fields.subtitle}\r\n        </Typography>\r\n      )}\r\n      <Typography classes={{ root: classes.body }}>\r\n        <div dangerouslySetInnerHTML={{ __html: post.fields.body }} />\r\n      </Typography>\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        align=\"right\"\r\n        color=\"textSecondary\"\r\n      >{`Nathan Smith - ${moment(post.fields.publish_date).format(\r\n        \"MMM D, YYYY\"\r\n      )}`}</Typography>\r\n    </Container>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Container, Grid, makeStyles, createStyles } from \"@material-ui/core\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport { routes } from \"../constants/routes\";\r\nimport { BlogContext } from \"../store/BlogContext\";\r\nimport { BlogPostCard } from \"./BlogPostCard\";\r\nimport { BlogPost } from \"./BlogPost\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 3)\r\n    }\r\n  })\r\n);\r\n\r\nexport const Blog: React.FC = props => {\r\n  const context = React.useContext(BlogContext);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Nathan Smith - Blog</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Nathan's blog is where he occasionally puts words about life, software, and Dungeons and Dragons.\"\r\n        />\r\n      </Helmet>\r\n      <Switch>\r\n        <Route exact path={routes.blog.base}>\r\n          <Container maxWidth=\"lg\" classes={{ root: classes.root }}>\r\n            <Grid container spacing={2}>\r\n              {context.posts.map(post => (\r\n                <Grid item sm>\r\n                  <BlogPostCard post={post} />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Container>\r\n        </Route>\r\n        <Route path={routes.blog.post.template} component={BlogPost} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nexport const Projects: React.FC = props => <div>projects</div>;\r\n","import React from \"react\";\r\nimport { CssBaseline, Container } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Theme from \"./styles/Theme\";\r\nimport { routes } from \"./constants/routes\";\r\nimport { Home, Blog, Projects, TopBar } from \"./components\";\r\nimport { BlogProvider } from \"./store/BlogContext\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Helmet>\r\n          <title>Nathan Smith</title>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"Nathan Smith, software developer and amateur jort enthusiast.\"\r\n          />\r\n        </Helmet>\r\n        <CssBaseline />\r\n        <BlogProvider>\r\n          <ThemeProvider theme={Theme}>\r\n            <TopBar />\r\n            <Switch>\r\n              <Route exact path={routes.home.base} component={Home} />\r\n              <Route path={routes.projects.base} component={Projects} />\r\n              <Route path={routes.blog.base} component={Blog} />\r\n            </Switch>\r\n          </ThemeProvider>\r\n        </BlogProvider>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}