{"version":3,"sources":["serviceWorker.ts","components/NavBar.tsx","types/ProjectTypes.ts","api/ApiConstants.ts","api/ProjectApi.ts","pages/Home/index.tsx","Utilities.ts","StorageHelper.ts","components/Fader.tsx","pages/Generators/components/LootTypeTile.tsx","pages/Generators/components/TypeList.tsx","pages/Generators/components/LootItem.tsx","pages/Generators/components/Generator.tsx","api/GeneratorApi.ts","components/Loader.tsx","pages/Generators/index.tsx","pages/Blog/index.tsx","pages/Projects/components/ProjectList.tsx","api/GithubApi.ts","pages/Projects/components/Project.tsx","pages/Projects/index.tsx","components/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","style","backgroundColor","borderBottom","borderTop","fontSize","fontWeight","height","letterSpacing","lineHeight","textTransform","clearStyle","color","textDecoration","linkStyle","marginRight","NavBar","react_default","a","createElement","className","Link","to","React","PureComponent","withRouter","ProjectStatus","AwBeans","ContentEndpoint","ProjectApi","Object","classCallCheck","this","api","axios","create","baseURL","params","auth_token","keys","get","then","resp","data","project","status","concat","name","body","description","icon","more","Types","Complete","length","Home","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","projects","_this2","GetProjectsWithStatus","ProjectTypes","setState","marginTop","href","getRandomProjects","marginBottom","target","select","Math","min","shuffled","array","j","x","slice","i","floor","random","Shuffle","push","key","getVersionedKey","packageJson","version","Fader","total","speed","delay","index","timing","animation","animationFillMode","children","LootTypeTile","backgroundImage","type","image","undefined","TypeList","id","renderLootTypes","types","forEach","typeEl","Fader_Fader","LootTypeTile_LootTypeTile","LootItem","Generator","setUnique","event","unique","checked","pickOne","newRemaining","remaining","toConsumableArray","items","item","splice","value","onClick","onChange","renderLootList","lootItems","loot","lootItem","LootItem_LootItem","GeneratorApi","loot_types","levels","Loader","baseStyle","background","borderRadius","size","width","display","loading","objectSpread","animationDelay","marginLeft","lootStorageKey","Generators","typeList","components_TypeList","generator","find","components_Generator","Api","lootString","realKey","itemString","localStorage","getItem","JSON","parse","expiration","Date","now","timestamp","removeItem","Cache","Loader_Loader","Switch","Route","exact","path","render","GetAllLootByType","arguments","setItem","stringify","Blog","ProjectList","getProjects","GithubApi","url","_url$split$slice","split","_url$split$slice2","slicedToArray","username","repo","headers","Accept","Project","projectApi","githubApi","GetProjectByName","isGithubProject","GetReadmeByRepoUrl","readmeText","html","lines","newHtml","line","newLine","indexOf","replace","StripGithubAnchorLinks","dangerouslySetInnerHTML","__html","startsWith","Projects","projectList","ProjectList_ProjectList","Project_Project","GetProjects","App","toggle","HashRouter","src_components_NavBar","component","Component","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1ac5877.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { RouteComponentProps, withRouter, Link } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nconst style: React.CSSProperties = {\r\n    backgroundColor: 'white',\r\n    borderBottom: '1px solid #eee',\r\n    borderTop: '1px solid #eee',\r\n    fontSize: 13,\r\n    fontWeight: 600,\r\n    height: 60,\r\n    letterSpacing: '.2rem',\r\n    lineHeight: '6.5rem',\r\n    textTransform: 'uppercase'\r\n};\r\n\r\nconst clearStyle: React.CSSProperties = {\r\n    color: 'inherit',\r\n    textDecoration: 'none'\r\n};\r\n\r\nconst linkStyle: React.CSSProperties = {\r\n    marginRight: 35\r\n};\r\n\r\nclass NavBar extends React.PureComponent<RouteComponentProps> {\r\n    public render() {\r\n        return (\r\n            <nav className=\"u-full-width\" style={style}>\r\n                <div className=\"container navLinks\">\r\n                    <Link to=\"/\" style={clearStyle}>\r\n                        <span style={linkStyle}>Home</span>\r\n                    </Link>\r\n                    <Link to=\"/projects\" style={clearStyle}>\r\n                        <span style={linkStyle}>Projects</span>\r\n                    </Link>\r\n                    <Link to=\"/dnd\" style={clearStyle}>\r\n                        <span style={linkStyle}>D&D</span>\r\n                    </Link>\r\n                    <Link to=\"/blog\" style={clearStyle}>\r\n                        <span style={linkStyle}>Blog</span>\r\n                    </Link>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","export enum ProjectStatus {\r\n    OnHold = 'On Hold',\r\n    Complete = 'Complete',\r\n    Ongoing = 'Ongoing'\r\n}\r\n\r\nexport interface Project {\r\n    icon: string;\r\n    more: string;\r\n    description: string;\r\n    body: string;\r\n    status: ProjectStatus;\r\n    name: string;\r\n}\r\n\r\nexport interface ButterResponseProject {\r\n    data: {\r\n        project: Project[];\r\n    };\r\n}\r\n","// It's read only anyway. Why are you stealing this?\r\nexport const AwBeans: string = '9ffd3dad4fd54423ad22bc3ce3e1a2fd6bbc9081';\r\nexport const ContentEndpoint: string = 'https://api.buttercms.com/v2/content/';\r\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\r\nimport { AwBeans, ContentEndpoint } from './ApiConstants';\r\nimport * as Types from '../types/ProjectTypes';\r\n\r\nexport default class ProjectApi {\r\n    private api: AxiosInstance;\r\n    constructor() {\r\n        this.api = axios.create({\r\n            baseURL: ContentEndpoint,\r\n            params: {\r\n                auth_token: AwBeans,\r\n                keys: 'project'\r\n            }\r\n        });\r\n    }\r\n\r\n    public GetProjects(): Promise<Types.Project[]> {\r\n        return this.api\r\n            .get('')\r\n            .then((resp: AxiosResponse<Types.ButterResponseProject>) => {\r\n                return resp.data.data.project;\r\n            });\r\n    }\r\n\r\n    public GetProjectsWithStatus(\r\n        status: Types.ProjectStatus\r\n    ): Promise<Types.Project[]> {\r\n        return this.api\r\n            .get('', {\r\n                params: {\r\n                    keys: `project[status=${status}]`\r\n                }\r\n            })\r\n            .then((resp: AxiosResponse<Types.ButterResponseProject>) => {\r\n                return resp.data.data.project;\r\n            });\r\n    }\r\n\r\n    public GetProjectByName(name: string): Promise<Types.Project> {\r\n        return this.api\r\n            .get('', {\r\n                params: {\r\n                    keys: `project[name=${name}]`\r\n                }\r\n            })\r\n            .then((resp: AxiosResponse<Types.ButterResponseProject>) => {\r\n                let project: Types.Project = {\r\n                    body: '',\r\n                    description: '',\r\n                    icon: '',\r\n                    more: '',\r\n                    name: '',\r\n                    status: Types.ProjectStatus.Complete\r\n                };\r\n                if (resp.data.data.project.length > 0) {\r\n                    project = resp.data.data.project[0];\r\n                }\r\n                return project;\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport { Shuffle } from '../../Utilities';\r\nimport ProjectApi from '../../api/ProjectApi';\r\nimport * as ProjectTypes from '../../types/ProjectTypes';\r\nimport './index.css';\r\n\r\ninterface HomeState {\r\n    projects: ProjectTypes.Project[];\r\n}\r\n\r\nexport default class Home extends React.PureComponent<\r\n    RouteComponentProps,\r\n    HomeState\r\n> {\r\n    private api: ProjectApi;\r\n    constructor(props: RouteComponentProps) {\r\n        super(props);\r\n        this.state = {\r\n            projects: []\r\n        };\r\n        this.api = new ProjectApi();\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.api\r\n            .GetProjectsWithStatus(ProjectTypes.ProjectStatus.Complete)\r\n            .then(projects => {\r\n                this.setState({ projects });\r\n            });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\" style={{ marginTop: 25 }}>\r\n                    <div className=\"one-third column\">\r\n                        <h4>\r\n                            Nathan Smith\r\n                            <br />\r\n                            Software Developer\r\n                        </h4>\r\n                        <p>\r\n                            Associate Software Developer at{' '}\r\n                            <a href=\"https://www.bentley.com/en\">\r\n                                Bentley Systems\r\n                            </a>\r\n                            . I have a passion for software development, music,\r\n                            and video games.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"two-thirds column\">\r\n                        <p>Check out one of these projects:</p>\r\n                        <ul>{this.getRandomProjects()}</ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <hr style={{ marginTop: 0, marginBottom: 20 }} />\r\n                    <div className=\"contactLinks\" style={{ fontSize: 25 }}>\r\n                        <a\r\n                            href=\"mailto:nathan@nathan-smith.org\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            <i className=\"fas fa-envelope\" />\r\n                        </a>\r\n                        <a href=\"https://github.com/OfficerHalf\">\r\n                            <i className=\"fab fa-github\" />\r\n                        </a>\r\n                        <a href=\"https://www.linkedin.com/in/nathan-r-smith/\">\r\n                            <i className=\"fab fa-linkedin\" />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getRandomProjects(): JSX.Element[] {\r\n        const select = Math.min(3, this.state.projects.length);\r\n        const projects: JSX.Element[] = [];\r\n        if (select > 0) {\r\n            const shuffled: ProjectTypes.Project[] = Shuffle(\r\n                this.state.projects\r\n            );\r\n            for (let i = 0; i < select; i++) {\r\n                projects.push(\r\n                    <li key={shuffled[i].name}>\r\n                        <Link to={`/projects/${shuffled[i].name}`}>\r\n                            {shuffled[i].name}\r\n                        </Link>\r\n                    </li>\r\n                );\r\n            }\r\n        }\r\n        return projects;\r\n    }\r\n}\r\n","export function Shuffle(array: any[]) {\r\n    const a: any[] = array.slice();\r\n    let j;\r\n    let x;\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        j = Math.floor(Math.random() * (i + 1));\r\n        x = a[i];\r\n        a[i] = a[j];\r\n        a[j] = x;\r\n    }\r\n    return a;\r\n}\r\n\r\nexport function StripGithubAnchorLinks(html: string): string {\r\n    const lines = html.split('\\n');\r\n    let newHtml = '';\r\n    lines.forEach(line => {\r\n        let newLine = line;\r\n        if (newLine.indexOf('href=\"#') !== -1) {\r\n            newLine = newLine.replace('href=', 'data-href=') + '\\n';\r\n        }\r\n        if (newLine.indexOf('class=\"octicon octicon-link\"') !== -1) {\r\n            newLine = newLine.replace(\r\n                'class=\"octicon octicon-link\"',\r\n                'class=\"octicon octicon-link hide\"'\r\n            );\r\n        }\r\n        newHtml += newLine;\r\n    });\r\n    return newHtml;\r\n}\r\n","import packageJson from '../package.json';\r\n\r\ninterface StorageItem {\r\n    value: string;\r\n    timestamp: number;\r\n    expiration: number;\r\n}\r\n\r\nexport function setString(\r\n    value: string,\r\n    key: string,\r\n    expiration: number = 3600000\r\n) {\r\n    const item: StorageItem = {\r\n        expiration,\r\n        timestamp: Date.now(),\r\n        value\r\n    };\r\n    localStorage.setItem(getVersionedKey(key), JSON.stringify(item));\r\n}\r\n\r\nexport function getString(key: string): string | null {\r\n    const realKey = getVersionedKey(key);\r\n    const itemString = localStorage.getItem(realKey);\r\n    if (itemString !== null) {\r\n        const item: StorageItem = JSON.parse(itemString);\r\n        if (\r\n            item.expiration === 0 ||\r\n            Date.now() - item.timestamp < item.expiration\r\n        ) {\r\n            return item.value;\r\n        }\r\n        localStorage.removeItem(realKey);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction getVersionedKey(key: string): string {\r\n    return `${key}:${packageJson.version}`;\r\n}\r\n","import React from 'react';\r\n\r\nconst DEFAULT_TOTAL = 4;\r\nconst DEFAULT_SPEED = 0.8;\r\n\r\ninterface FaderProps {\r\n    index?: number;\r\n    total?: number;\r\n    speed?: number;\r\n    delay?: number;\r\n    timing?: string;\r\n    className?: string;\r\n}\r\n\r\nexport default class Fader extends React.PureComponent<FaderProps> {\r\n    public render() {\r\n        const total: number = this.props.total\r\n            ? this.props.total\r\n            : DEFAULT_TOTAL;\r\n        const speed: number = this.props.speed\r\n            ? this.props.speed\r\n            : DEFAULT_SPEED;\r\n        const delay: number = this.props.delay\r\n            ? this.props.delay\r\n            : this.props.index\r\n            ? (speed / total) * this.props.index\r\n            : 0;\r\n        const timing: string = this.props.timing\r\n            ? this.props.timing\r\n            : 'ease-out';\r\n        const style: React.CSSProperties = {\r\n            animation: `fade-in ${speed}s ${timing} ${delay}s`,\r\n            animationFillMode: 'both'\r\n        };\r\n        return (\r\n            <div className={this.props.className} style={style}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './LootTypeTile.css';\r\nimport * as Types from '../../../types/GeneratorTypes';\r\n\r\ninterface LootTypeTileProps {\r\n    type: Types.LootType;\r\n}\r\n\r\nexport default class LootTypeTile extends React.PureComponent<\r\n    LootTypeTileProps\r\n> {\r\n    public render() {\r\n        return (\r\n            <div\r\n                className=\"lootTypeTile\"\r\n                style={{\r\n                    backgroundImage: this.props.type.image\r\n                        ? `url(${this.props.type.image})`\r\n                        : undefined\r\n                }}\r\n            >\r\n                <span className=\"lootTypeText\">{this.props.type.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport Fader from '../../../components/Fader';\r\nimport LootTypeTile from './LootTypeTile';\r\nimport * as Types from '../../../types/GeneratorTypes';\r\n\r\ntype TypeListProps = RouteComponentProps & {\r\n    types: Types.LootType[];\r\n};\r\n\r\nclass TypeList extends React.PureComponent<TypeListProps> {\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <h1>Generators</h1>\r\n                <div id=\"lootTiles\">{this.renderLootTypes()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderLootTypes(): JSX.Element[] {\r\n        const types: JSX.Element[] = [];\r\n        this.props.types.forEach((type, index) => {\r\n            const typeEl = (\r\n                <Fader\r\n                    key={type.name}\r\n                    index={index}\r\n                    total={this.props.types.length}\r\n                    className=\"lootTile\"\r\n                >\r\n                    <Link to={`/dnd/${type.name}`}>\r\n                        <LootTypeTile type={type} />\r\n                    </Link>\r\n                </Fader>\r\n            );\r\n            types.push(typeEl);\r\n        });\r\n        return types;\r\n    }\r\n}\r\n\r\nexport default withRouter(TypeList);\r\n","import React from 'react';\r\n\r\ninterface LootItemProps {\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport default class LootItem extends React.PureComponent<LootItemProps> {\r\n    public render() {\r\n        return (\r\n            <div>\r\n                {this.props.name} : {this.props.description}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport LootItem from './LootItem';\r\nimport * as Types from '../../../types/GeneratorTypes';\r\n\r\ntype GeneratorProps = RouteComponentProps & {\r\n    type: Types.LootType;\r\n};\r\n\r\ninterface GeneratorState {\r\n    remaining: Types.Loot[];\r\n    item: Types.Loot;\r\n    unique: boolean;\r\n}\r\n\r\nclass Generator extends React.PureComponent<GeneratorProps, GeneratorState> {\r\n    constructor(props: GeneratorProps) {\r\n        super(props);\r\n        this.state = {\r\n            remaining: props.type.items,\r\n            item: {\r\n                description: '',\r\n                item: '',\r\n                value: ''\r\n            },\r\n            unique: true\r\n        };\r\n    }\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <h2>{this.props.type.name}</h2>\r\n                <div>Remaining: {this.state.remaining.length}</div>\r\n                <div>Random: {this.state.item.item}</div>\r\n                <div>\r\n                    <button onClick={this.pickOne}>Pick One</button>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={this.setUnique}\r\n                        checked={this.state.unique}\r\n                    />\r\n                </div>\r\n                {this.renderLootList(this.props.type.items)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderLootList(lootItems: Types.Loot[]): JSX.Element[] {\r\n        const loot: JSX.Element[] = [];\r\n        lootItems.forEach(lootItem => {\r\n            loot.push(\r\n                <LootItem\r\n                    name={lootItem.item}\r\n                    description={lootItem.description}\r\n                    key={lootItem.item}\r\n                />\r\n            );\r\n        });\r\n        return loot;\r\n    }\r\n\r\n    private setUnique = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ unique: event.target.checked });\r\n    };\r\n\r\n    private pickOne = () => {\r\n        const newRemaining =\r\n            this.state.remaining.length > 0 && this.state.unique\r\n                ? [...this.state.remaining]\r\n                : [...this.props.type.items];\r\n        const index = Math.floor(Math.random() * newRemaining.length);\r\n        const item = newRemaining[index];\r\n        newRemaining.splice(index, 1);\r\n        this.setState({ remaining: newRemaining, item });\r\n    };\r\n}\r\n\r\nexport default withRouter(Generator);\r\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\r\nimport { AwBeans, ContentEndpoint } from './ApiConstants';\r\nimport * as Types from '../types/GeneratorTypes';\r\n\r\nexport default class GeneratorApi {\r\n    private api: AxiosInstance;\r\n    constructor() {\r\n        this.api = axios.create({\r\n            baseURL: ContentEndpoint,\r\n            params: {\r\n                auth_token: AwBeans\r\n            }\r\n        });\r\n    }\r\n\r\n    public GetLoot(): Promise<Types.Loot[]> {\r\n        return this.api\r\n            .get('', {\r\n                params: {\r\n                    keys: 'loot'\r\n                }\r\n            })\r\n            .then((resp: AxiosResponse<Types.ButterResponseLoot>) => {\r\n                return resp.data.data.loot;\r\n            });\r\n    }\r\n\r\n    public GetAllLootByType(): Promise<Types.LootType[]> {\r\n        return this.api\r\n            .get('', {\r\n                params: {\r\n                    keys: 'loot_types'\r\n                }\r\n            })\r\n            .then((resp: AxiosResponse<Types.ButterResponseLootType>) => {\r\n                return resp.data.data.loot_types;\r\n            });\r\n    }\r\n\r\n    public GetLootTypes(): Promise<Types.LootType[]> {\r\n        return this.api\r\n            .get('', {\r\n                params: {\r\n                    keys: 'loot_types',\r\n                    levels: '1'\r\n                }\r\n            })\r\n            .then((resp: AxiosResponse<Types.ButterResponseLootType>) => {\r\n                return resp.data.data.loot_types;\r\n            });\r\n    }\r\n\r\n    public GetLootForType(type: string): Promise<Types.Loot[]> {\r\n        return this.api\r\n            .get('', {\r\n                params: {\r\n                    keys: `loot_types[name=${type}]`\r\n                }\r\n            })\r\n            .then((resp: AxiosResponse<Types.ButterResponseLootType>) => {\r\n                return resp.data.data.loot_types[0].items;\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\ninterface LoaderProps {\r\n    loading: boolean;\r\n    size: number;\r\n    color: string;\r\n}\r\n\r\nexport default class Loader extends React.PureComponent<LoaderProps> {\r\n    private baseStyle: React.CSSProperties;\r\n    constructor(props: LoaderProps) {\r\n        super(props);\r\n        this.baseStyle = {\r\n            animation: 'fade 1.4s infinite',\r\n            animationFillMode: 'both',\r\n            background: props.color,\r\n            borderRadius: '50%',\r\n            height: props.size,\r\n            width: props.size\r\n        };\r\n    }\r\n    public render() {\r\n        const display: string = this.props.loading ? 'inline-block' : 'none';\r\n        return (\r\n            <div>\r\n                <span\r\n                    style={{\r\n                        ...this.baseStyle,\r\n                        display\r\n                    }}\r\n                />\r\n                <span\r\n                    style={{\r\n                        ...this.baseStyle,\r\n                        animationDelay: '0.2s',\r\n                        display,\r\n                        marginLeft: this.props.size / 2,\r\n                        marginRight: this.props.size / 2\r\n                    }}\r\n                />\r\n                <span\r\n                    style={{\r\n                        ...this.baseStyle,\r\n                        animationDelay: '0.4s',\r\n                        display\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch, RouteComponentProps } from 'react-router-dom';\r\nimport * as Cache from '../../StorageHelper';\r\nimport TypeList from './components/TypeList';\r\nimport Generator from './components/Generator';\r\nimport Api from '../../api/GeneratorApi';\r\nimport * as Types from '../../types/GeneratorTypes';\r\nimport Loader from '../../components/Loader';\r\nimport './index.css';\r\n\r\nconst lootStorageKey: string = 'loots';\r\n\r\ninterface GeneratorsState {\r\n    loot: Types.LootType[];\r\n    loading: boolean;\r\n}\r\n\r\ninterface GeneratorRouteParams {\r\n    type: string;\r\n}\r\n\r\nexport default class Generators extends React.PureComponent<\r\n    RouteComponentProps,\r\n    GeneratorsState\r\n> {\r\n    private api: Api;\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.api = new Api();\r\n        this.state = {\r\n            loading: true,\r\n            loot: []\r\n        };\r\n        // Get loot from local storage\r\n        const lootString = Cache.getString(lootStorageKey);\r\n        if (lootString !== null) {\r\n            this.state = {\r\n                loading: false,\r\n                loot: JSON.parse(lootString)\r\n            };\r\n        }\r\n    }\r\n    public render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Loader loading={this.state.loading} size={10} color=\"#222\" />\r\n                {!this.state.loading && (\r\n                    <Switch>\r\n                        <Route\r\n                            exact={true}\r\n                            path=\"/dnd\"\r\n                            render={this.typeList}\r\n                        />\r\n                        <Route path=\"/dnd/:type\" render={this.generator} />\r\n                    </Switch>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n    public componentDidMount() {\r\n        if (this.state.loot.length === 0) {\r\n            this.api.GetAllLootByType().then(loot => {\r\n                Cache.setString(JSON.stringify(loot), lootStorageKey);\r\n                this.setState({ loot, loading: false });\r\n            });\r\n        }\r\n    }\r\n\r\n    private typeList = () => <TypeList types={this.state.loot} />;\r\n    private generator = (props: RouteComponentProps<GeneratorRouteParams>) => {\r\n        const type = this.state.loot.find(\r\n            x => x.name === props.match.params.type\r\n        );\r\n        return <Generator type={type ? type : { items: [], name: '' }} />;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nexport default class Blog extends React.PureComponent<RouteComponentProps> {\r\n    public render() {\r\n        return <div className=\"container\">Blog</div>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Types from '../../../types/ProjectTypes';\r\n\r\ninterface ProjectListProps {\r\n    projects: Types.Project[];\r\n}\r\n\r\nexport default class ProjectList extends React.PureComponent<ProjectListProps> {\r\n    public render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <ul>{this.getProjects()}</ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getProjects = () => {\r\n        const projects: JSX.Element[] = [];\r\n        this.props.projects.forEach(project => {\r\n            projects.push(\r\n                <li key={project.name}>\r\n                    <Link to={`/projects/${project.name}`}>{project.name}</Link>\r\n                </li>\r\n            );\r\n        });\r\n        return projects;\r\n    };\r\n}\r\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\r\nimport * as Types from '../types/GithubTypes';\r\n\r\nexport default class GithubApi {\r\n    private api: AxiosInstance;\r\n    constructor() {\r\n        this.api = axios.create({\r\n            baseURL: 'https://api.github.com/'\r\n        });\r\n    }\r\n\r\n    public GetReadmeByRepoUrl(url: string): Promise<string> {\r\n        const [username, repo] = url.split('/').slice(-2);\r\n        return this.api\r\n            .get(`/repos/${username}/${repo}/readme`, {\r\n                headers: {\r\n                    Accept: 'application/vnd.github.v3.html'\r\n                }\r\n            })\r\n            .then((resp: Types.ButterResponseReadmeHtml) => {\r\n                return resp.data;\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport * as Types from '../../../types/ProjectTypes';\r\nimport ProjectApi from '../../../api/ProjectApi';\r\nimport GithubApi from '../../../api/GithubApi';\r\nimport Fader from '../../../components/Fader';\r\nimport { StripGithubAnchorLinks } from '../../../Utilities';\r\n\r\ninterface ProjectProps {\r\n    name: string;\r\n}\r\n\r\ninterface ProjectState {\r\n    project: Types.Project;\r\n}\r\n\r\nexport default class Project extends React.PureComponent<\r\n    ProjectProps,\r\n    ProjectState\r\n> {\r\n    private projectApi: ProjectApi;\r\n    private githubApi: GithubApi;\r\n    constructor(props: ProjectProps) {\r\n        super(props);\r\n        this.projectApi = new ProjectApi();\r\n        this.githubApi = new GithubApi();\r\n        this.state = {\r\n            project: {\r\n                body: '',\r\n                description: '',\r\n                icon: '',\r\n                more: '',\r\n                name: '',\r\n                status: Types.ProjectStatus.Complete\r\n            }\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.projectApi.GetProjectByName(this.props.name).then(project => {\r\n            if (project.body === '' && this.isGithubProject(project.more)) {\r\n                this.githubApi\r\n                    .GetReadmeByRepoUrl(project.more)\r\n                    .then(readmeText => {\r\n                        project.body = StripGithubAnchorLinks(readmeText);\r\n                        this.setState({ project });\r\n                    });\r\n            } else {\r\n                this.setState({ project });\r\n            }\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Fader>\r\n                    <div>\r\n                        {this.isGithubProject(this.state.project.more) && (\r\n                            <div style={{ marginTop: 20, marginBottom: 20 }}>\r\n                                <a\r\n                                    href={this.state.project.more}\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    See the source on GitHub.\r\n                                </a>\r\n                            </div>\r\n                        )}\r\n                        <div\r\n                            dangerouslySetInnerHTML={{\r\n                                __html: this.state.project.body\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Fader>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private isGithubProject(url: string): boolean {\r\n        return url.startsWith('https://github.com/');\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { RouteComponentProps, Switch, Route } from 'react-router-dom';\r\nimport ProjectList from './components/ProjectList';\r\nimport Project from './components/Project';\r\nimport ProjectApi from '../../api/ProjectApi';\r\nimport * as Types from '../../types/ProjectTypes';\r\n\r\ninterface ProjectRouteParams {\r\n    project: string;\r\n}\r\n\r\ninterface ProjectsState {\r\n    projects: Types.Project[];\r\n}\r\n\r\nexport default class Projects extends React.PureComponent<\r\n    RouteComponentProps,\r\n    ProjectsState\r\n> {\r\n    private api: ProjectApi;\r\n    constructor(props: RouteComponentProps) {\r\n        super(props);\r\n        this.api = new ProjectApi();\r\n        this.state = {\r\n            projects: []\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.api.GetProjects().then(projects => {\r\n            this.setState({ projects });\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact={true}\r\n                        path=\"/projects\"\r\n                        render={this.projectList}\r\n                    />\r\n                    <Route path=\"/projects/:project\" render={this.project} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private projectList = () => {\r\n        return <ProjectList projects={this.state.projects} />;\r\n    };\r\n\r\n    private project = (props: RouteComponentProps<ProjectRouteParams>) => {\r\n        return <Project name={props.match.params.project} />;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport NavBar from './NavBar';\r\nimport Home from '../pages/Home';\r\nimport Generators from '../pages/Generators';\r\nimport Blog from '../pages/Blog';\r\nimport Projects from '../pages/Projects';\r\n\r\ninterface AppState {\r\n    toggle: boolean;\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            toggle: true\r\n        };\r\n    }\r\n    public render() {\r\n        return (\r\n            <div id=\"AppWrapper\">\r\n                <HashRouter>\r\n                    <div>\r\n                        <NavBar />\r\n                        <div>\r\n                            <Switch>\r\n                                <Route exact={true} path=\"/\" component={Home} />\r\n                                <Route path=\"/dnd\" component={Generators} />\r\n                                <Route path=\"/blog\" component={Blog} />\r\n                                <Route path=\"/projects\" component={Projects} />\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}