{"version":3,"sources":["serviceWorker.ts","components/NavBar.tsx","pages/Home/index.tsx","StorageHelper.ts","components/Fader.tsx","pages/Generators/components/LootTypeTile.tsx","pages/Generators/components/TypeList.tsx","pages/Generators/components/LootItem.tsx","pages/Generators/components/Generator.tsx","pages/Generators/api.ts","components/Loader.tsx","pages/Generators/index.tsx","pages/Recipes/index.tsx","components/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","style","backgroundColor","borderBottom","borderTop","fontSize","fontWeight","height","letterSpacing","lineHeight","textTransform","clearStyle","color","textDecoration","linkStyle","marginRight","NavBar","react_default","a","createElement","className","Link","to","React","PureComponent","withRouter","Home","marginTop","href","marginBottom","target","getVersionedKey","key","concat","packageJson","version","Fader","total","this","props","speed","delay","index","timing","animation","animationFillMode","children","LootTypeTile","backgroundImage","type","image","undefined","name","TypeList","id","renderLootTypes","_this","types","forEach","typeEl","Fader_Fader","length","LootTypeTile_LootTypeTile","push","LootItem","description","Generator","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setUnique","event","setState","unique","checked","pickOne","newRemaining","state","remaining","toConsumableArray","items","Math","floor","random","item","splice","value","onClick","onChange","renderLootList","lootItems","loot","lootItem","LootItem_LootItem","GeneratorApi","awBeans","endpoint","api","axios","create","baseURL","params","auth_token","get","keys","then","resp","data","loot_types","levels","Loader","baseStyle","background","borderRadius","size","width","display","loading","objectSpread","animationDelay","marginLeft","lootStorageKey","Generators","typeList","components_TypeList","generator","find","x","components_Generator","Api","lootString","realKey","itemString","localStorage","getItem","JSON","parse","expiration","Date","now","timestamp","removeItem","Cache","Loader_Loader","Switch","Route","exact","path","render","_this2","GetAllLootByType","arguments","setItem","stringify","Recipes","App","toggle","HashRouter","src_components_NavBar","component","Component","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.afa79cac.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { RouteComponentProps, withRouter, Link } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nconst style: React.CSSProperties = {\r\n    backgroundColor: 'white',\r\n    borderBottom: '1px solid #eee',\r\n    borderTop: '1px solid #eee',\r\n    fontSize: 13,\r\n    fontWeight: 600,\r\n    height: 60,\r\n    letterSpacing: '.2rem',\r\n    lineHeight: '6.5rem',\r\n    textTransform: 'uppercase'\r\n};\r\n\r\nconst clearStyle: React.CSSProperties = {\r\n    color: 'inherit',\r\n    textDecoration: 'none'\r\n};\r\n\r\nconst linkStyle: React.CSSProperties = {\r\n    marginRight: 35\r\n};\r\n\r\nclass NavBar extends React.PureComponent<RouteComponentProps> {\r\n    public render() {\r\n        return (\r\n            <nav className=\"u-full-width\" style={style}>\r\n                <div className=\"container navLinks\">\r\n                    <Link to=\"/\" style={clearStyle}>\r\n                        <span style={linkStyle}>Home</span>\r\n                    </Link>\r\n                    <Link to=\"/dnd\" style={clearStyle}>\r\n                        <span style={linkStyle}>D&D</span>\r\n                    </Link>\r\n                    <Link to=\"/recipes\" style={clearStyle}>\r\n                        <span style={linkStyle}>Recipes</span>\r\n                    </Link>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nexport default class Home extends React.PureComponent<RouteComponentProps> {\r\n    public render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\" style={{ marginTop: 25 }}>\r\n                    <div className=\"one-third column\">\r\n                        <h4>\r\n                            Nathan Smith\r\n                            <br />\r\n                            Software Developer\r\n                        </h4>\r\n                        <p>\r\n                            Associate Software Developer at{' '}\r\n                            <a href=\"https://www.bentley.com/en\">\r\n                                Bentley Systems\r\n                            </a>\r\n                            . I have a passion for open source software, music,\r\n                            and video games.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"two-thirds column\">\r\n                        <p>stuff</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <hr style={{ marginTop: 0, marginBottom: 20 }} />\r\n                    <div className=\"contactLinks\" style={{ fontSize: 25 }}>\r\n                        <a\r\n                            href=\"mailto:nathan@nathan-smith.org\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            <i className=\"fas fa-envelope\" />\r\n                        </a>\r\n                        <a href=\"https://github.com/OfficerHalf\">\r\n                            <i className=\"fab fa-github\" />\r\n                        </a>\r\n                        <a href=\"https://www.linkedin.com/in/nathan-r-smith/\">\r\n                            <i className=\"fab fa-linkedin\" />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import packageJson from '../package.json';\r\n\r\ninterface StorageItem {\r\n    value: string;\r\n    timestamp: number;\r\n    expiration: number;\r\n}\r\n\r\nexport function setString(\r\n    value: string,\r\n    key: string,\r\n    expiration: number = 3600000\r\n) {\r\n    const item: StorageItem = {\r\n        expiration,\r\n        timestamp: Date.now(),\r\n        value\r\n    };\r\n    localStorage.setItem(getVersionedKey(key), JSON.stringify(item));\r\n}\r\n\r\nexport function getString(key: string): string | null {\r\n    const realKey = getVersionedKey(key);\r\n    const itemString = localStorage.getItem(realKey);\r\n    if (itemString !== null) {\r\n        const item: StorageItem = JSON.parse(itemString);\r\n        if (\r\n            item.expiration === 0 ||\r\n            Date.now() - item.timestamp < item.expiration\r\n        ) {\r\n            return item.value;\r\n        }\r\n        localStorage.removeItem(realKey);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction getVersionedKey(key: string): string {\r\n    return `${key}:${packageJson.version}`;\r\n}\r\n","import React from 'react';\r\n\r\nconst DEFAULT_TOTAL = 4;\r\nconst DEFAULT_SPEED = 0.8;\r\n\r\ninterface FaderProps {\r\n    index?: number;\r\n    total?: number;\r\n    speed?: number;\r\n    delay?: number;\r\n    timing?: string;\r\n    className?: string;\r\n}\r\n\r\nexport default class Fader extends React.PureComponent<FaderProps> {\r\n    public render() {\r\n        const total: number = this.props.total\r\n            ? this.props.total\r\n            : DEFAULT_TOTAL;\r\n        const speed: number = this.props.speed\r\n            ? this.props.speed\r\n            : DEFAULT_SPEED;\r\n        const delay: number = this.props.delay\r\n            ? this.props.delay\r\n            : this.props.index\r\n            ? (speed / total) * this.props.index\r\n            : 0;\r\n        const timing: string = this.props.timing\r\n            ? this.props.timing\r\n            : 'ease-out';\r\n        const style: React.CSSProperties = {\r\n            animation: `fade-in ${speed}s ${timing} ${delay}s`,\r\n            animationFillMode: 'both'\r\n        };\r\n        return (\r\n            <div className={this.props.className} style={style}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './LootTypeTile.css';\r\nimport * as Types from '../types';\r\n\r\ninterface LootTypeTileProps {\r\n    type: Types.LootType;\r\n}\r\n\r\nexport default class LootTypeTile extends React.PureComponent<\r\n    LootTypeTileProps\r\n> {\r\n    public render() {\r\n        return (\r\n            <div\r\n                className=\"lootTypeTile\"\r\n                style={{\r\n                    backgroundImage: this.props.type.image\r\n                        ? `url(${this.props.type.image})`\r\n                        : undefined\r\n                }}\r\n            >\r\n                <span className=\"lootTypeText\">{this.props.type.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport Fader from '../../../components/Fader';\r\nimport LootTypeTile from './LootTypeTile';\r\nimport * as Types from '../types';\r\n\r\ntype TypeListProps = RouteComponentProps & {\r\n    types: Types.LootType[];\r\n};\r\n\r\nclass TypeList extends React.PureComponent<TypeListProps> {\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <h1>Generators</h1>\r\n                <div id=\"lootTiles\">{this.renderLootTypes()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderLootTypes(): JSX.Element[] {\r\n        const types: JSX.Element[] = [];\r\n        this.props.types.forEach((type, index) => {\r\n            const typeEl = (\r\n                <Fader\r\n                    key={type.name}\r\n                    index={index}\r\n                    total={this.props.types.length}\r\n                    className=\"lootTile\"\r\n                >\r\n                    <Link to={`/dnd/${type.name}`}>\r\n                        <LootTypeTile type={type} />\r\n                    </Link>\r\n                </Fader>\r\n            );\r\n            types.push(typeEl);\r\n        });\r\n        return types;\r\n    }\r\n}\r\n\r\nexport default withRouter(TypeList);\r\n","import React from 'react';\r\n\r\ninterface LootItemProps {\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport default class LootItem extends React.PureComponent<LootItemProps> {\r\n    public render() {\r\n        return (\r\n            <div>\r\n                {this.props.name} : {this.props.description}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport LootItem from './LootItem';\r\nimport * as Types from '../types';\r\n\r\ntype GeneratorProps = RouteComponentProps & {\r\n    type: Types.LootType;\r\n};\r\n\r\ninterface GeneratorState {\r\n    remaining: Types.Loot[];\r\n    item: Types.Loot;\r\n    unique: boolean;\r\n}\r\n\r\nclass Generator extends React.PureComponent<GeneratorProps, GeneratorState> {\r\n    constructor(props: GeneratorProps) {\r\n        super(props);\r\n        this.state = {\r\n            remaining: props.type.items,\r\n            item: {\r\n                description: '',\r\n                item: '',\r\n                value: ''\r\n            },\r\n            unique: true\r\n        };\r\n    }\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <h2>{this.props.type.name}</h2>\r\n                <div>Remaining: {this.state.remaining.length}</div>\r\n                <div>Random: {this.state.item.item}</div>\r\n                <div>\r\n                    <button onClick={this.pickOne}>Pick One</button>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={this.setUnique}\r\n                        checked={this.state.unique}\r\n                    />\r\n                </div>\r\n                {this.renderLootList(this.props.type.items)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderLootList(lootItems: Types.Loot[]): JSX.Element[] {\r\n        const loot: JSX.Element[] = [];\r\n        lootItems.forEach(lootItem => {\r\n            loot.push(\r\n                <LootItem\r\n                    name={lootItem.item}\r\n                    description={lootItem.description}\r\n                    key={lootItem.item}\r\n                />\r\n            );\r\n        });\r\n        return loot;\r\n    }\r\n\r\n    private setUnique = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ unique: event.target.checked });\r\n    };\r\n\r\n    private pickOne = () => {\r\n        const newRemaining =\r\n            this.state.remaining.length > 0 && this.state.unique\r\n                ? [...this.state.remaining]\r\n                : [...this.props.type.items];\r\n        const index = Math.floor(Math.random() * newRemaining.length);\r\n        const item = newRemaining[index];\r\n        newRemaining.splice(index, 1);\r\n        this.setState({ remaining: newRemaining, item });\r\n    };\r\n}\r\n\r\nexport default withRouter(Generator);\r\n","import axios, { AxiosInstance, AxiosPromise, AxiosResponse } from 'axios';\r\nimport * as Types from './types';\r\n\r\nexport default class GeneratorApi {\r\n    // It's read only anyway. Why are you stealing this?\r\n    private awBeans: string = '9ffd3dad4fd54423ad22bc3ce3e1a2fd6bbc9081';\r\n    private endpoint: string = 'https://api.buttercms.com/v2/content/';\r\n    private api: AxiosInstance;\r\n    constructor() {\r\n        this.api = axios.create({\r\n            baseURL: this.endpoint,\r\n            params: {\r\n                auth_token: this.awBeans\r\n            }\r\n        });\r\n    }\r\n\r\n    public GetLoot(): Promise<Types.Loot[]> {\r\n        return this.api\r\n            .get('', {\r\n                params: {\r\n                    keys: 'loot'\r\n                }\r\n            })\r\n            .then((resp: AxiosResponse<Types.ButterResponseLoot>) => {\r\n                return resp.data.data.loot;\r\n            });\r\n    }\r\n\r\n    public GetAllLootByType(): Promise<Types.LootType[]> {\r\n        return this.api\r\n            .get('', {\r\n                params: {\r\n                    keys: 'loot_types'\r\n                }\r\n            })\r\n            .then((resp: AxiosResponse<Types.ButterResponseLootType>) => {\r\n                return resp.data.data.loot_types;\r\n            });\r\n    }\r\n\r\n    public GetLootTypes(): Promise<Types.LootType[]> {\r\n        return this.api\r\n            .get('', {\r\n                params: {\r\n                    keys: 'loot_types',\r\n                    levels: '1'\r\n                }\r\n            })\r\n            .then((resp: AxiosResponse<Types.ButterResponseLootType>) => {\r\n                return resp.data.data.loot_types;\r\n            });\r\n    }\r\n\r\n    public GetLootForType(type: string): Promise<Types.Loot[]> {\r\n        return this.api\r\n            .get('', {\r\n                params: {\r\n                    keys: `loot_types[name=${type}]`\r\n                }\r\n            })\r\n            .then((resp: AxiosResponse<Types.ButterResponseLootType>) => {\r\n                return resp.data.data.loot_types[0].items;\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\ninterface LoaderProps {\r\n    loading: boolean;\r\n    size: number;\r\n    color: string;\r\n}\r\n\r\nexport default class Loader extends React.PureComponent<LoaderProps> {\r\n    private baseStyle: React.CSSProperties;\r\n    constructor(props: LoaderProps) {\r\n        super(props);\r\n        this.baseStyle = {\r\n            animation: 'fade 1.4s infinite',\r\n            animationFillMode: 'both',\r\n            background: props.color,\r\n            borderRadius: '50%',\r\n            height: props.size,\r\n            width: props.size\r\n        };\r\n    }\r\n    public render() {\r\n        const display: string = this.props.loading ? 'inline-block' : 'none';\r\n        return (\r\n            <div>\r\n                <span\r\n                    style={{\r\n                        ...this.baseStyle,\r\n                        display\r\n                    }}\r\n                />\r\n                <span\r\n                    style={{\r\n                        ...this.baseStyle,\r\n                        animationDelay: '0.2s',\r\n                        display,\r\n                        marginLeft: this.props.size / 2,\r\n                        marginRight: this.props.size / 2\r\n                    }}\r\n                />\r\n                <span\r\n                    style={{\r\n                        ...this.baseStyle,\r\n                        animationDelay: '0.4s',\r\n                        display\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch, RouteComponentProps } from 'react-router-dom';\r\nimport * as Cache from '../../StorageHelper';\r\nimport TypeList from './components/TypeList';\r\nimport Generator from './components/Generator';\r\nimport Api from './api';\r\nimport * as Types from './types';\r\nimport Loader from '../../components/Loader';\r\nimport './index.css';\r\n\r\nconst lootStorageKey: string = 'loots';\r\n\r\ninterface GeneratorsState {\r\n    loot: Types.LootType[];\r\n    loading: boolean;\r\n}\r\n\r\ninterface GeneratorRouteParams {\r\n    type: string;\r\n}\r\n\r\nexport default class Generators extends React.PureComponent<\r\n    RouteComponentProps,\r\n    GeneratorsState\r\n> {\r\n    private api: Api;\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.api = new Api();\r\n        this.state = {\r\n            loading: true,\r\n            loot: []\r\n        };\r\n        // Get loot from local storage\r\n        const lootString = Cache.getString(lootStorageKey);\r\n        if (lootString !== null) {\r\n            this.state = {\r\n                loading: false,\r\n                loot: JSON.parse(lootString)\r\n            };\r\n        }\r\n    }\r\n    public render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Loader loading={this.state.loading} size={10} color=\"#222\" />\r\n                {!this.state.loading && (\r\n                    <Switch>\r\n                        <Route\r\n                            exact={true}\r\n                            path=\"/dnd\"\r\n                            render={this.typeList}\r\n                        />\r\n                        <Route path=\"/dnd/:type\" render={this.generator} />\r\n                    </Switch>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n    public componentDidMount() {\r\n        if (this.state.loot.length === 0) {\r\n            this.api.GetAllLootByType().then(loot => {\r\n                Cache.setString(JSON.stringify(loot), lootStorageKey);\r\n                this.setState({ loot, loading: false });\r\n            });\r\n        }\r\n    }\r\n\r\n    private typeList = () => <TypeList types={this.state.loot} />;\r\n    private generator = (props: RouteComponentProps<GeneratorRouteParams>) => {\r\n        const type = this.state.loot.find(\r\n            x => x.name === props.match.params.type\r\n        );\r\n        return <Generator type={type ? type : { items: [], name: '' }} />;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nexport default class Recipes extends React.PureComponent<RouteComponentProps> {\r\n    public render() {\r\n        return <div className=\"container\">Recipes</div>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport NavBar from './NavBar';\r\nimport Home from '../pages/Home';\r\nimport Generators from '../pages/Generators';\r\nimport Recipes from '../pages/Recipes';\r\n\r\ninterface AppState {\r\n    toggle: boolean;\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            toggle: true\r\n        };\r\n    }\r\n    public render() {\r\n        return (\r\n            <div id=\"AppWrapper\">\r\n                <HashRouter>\r\n                    <div>\r\n                        <NavBar />\r\n                        <div>\r\n                            <Switch>\r\n                                <Route exact={true} path=\"/\" component={Home} />\r\n                                <Route path=\"/dnd\" component={Generators} />\r\n                                <Route path=\"/recipes\" component={Recipes} />\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}