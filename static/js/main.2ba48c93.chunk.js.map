{"version":3,"sources":["components/Blog/PostGrid.tsx","styles/Theme.ts","constants/routes.ts","components/TopBar.tsx","constants/links.ts","constants/strings.ts","components/BioCard/Header.tsx","components/BioCard/Body.tsx","components/BioCard/Footer.tsx","components/BioCard/BioCard.tsx","components/BlogPostCard/BlogPostCard.tsx","api/butter.ts","store/BlogContext.tsx","components/Home/Home.tsx","components/BlogPost/Frontmatter.tsx","components/BlogPost/Footer.tsx","components/BlogPost/BlogPost.tsx","components/Blog/Blog.tsx","components/Projects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PostGridMode","theme","createMuiTheme","routes","home","base","projects","blog","post","template","value","slug","concat","category","cat","tag","useStyles","makeStyles","root","flexGrow","appBar","flexDirection","tabs","TopBar","withRouter","props","classes","react","className","AppBar","position","Tabs","path","location","pathname","startsWith","getTab","onChange","event","history","push","indicatorColor","Tab","label","IconButton","color","index_es","Email","links","bio","bioImage","createStyles","media","width","height","backgroundPosition","Header","CardMedia","image","CondensedHeader","_React$useState","React","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","CardHeader","avatar","Avatar","src","title","action","onClick","currentTarget","MoreVert","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","component","href","target","rel","ListItemIcon","ListItemText","CondensedBody","CardContent","Body","Typography","variant","gutterBottom","actions","justifyContent","Footer","CardActions","maxWidth","flat","boxShadow","BioCard","_props$condensed","condensed","_props$flat","header","Header_CondensedHeader","Header_Header","body","Body_CondensedBody","Body_Body","footer","Footer_Footer","rootClasses","Card","card","display","minHeight","cardContent","minWidth","BlogPostCard","CardActionArea","fields","moment","publish_date","format","summary","card_image","alt","card_image_alt","awBeans","butter","classCallCheck","this","client","Axios","create","baseURL","params","auth_token","createClass","key","get","then","postData","data","BlogContext","posts","getPosts","BlogProvider","_React$Component","_this","possibleConstructorReturn","getPrototypeOf","call","api","state","inherits","Provider","children","_this2","postResponse","setState","Consumer","padding","spacing","Home","useTheme","useMediaQuery","breakpoints","down","blogContext","Container","Grid","container","item","sm","BioCard_BioCard","map","margin","marginTop","marginBottom","Frontmatter","Link","RouterLink","to","subtitle","subheader","header_image","Box","header_image_alt","alignItems","flexWrap","marginRight","tags","Chip","clickable","BlogPost","match","foundPost","find","p","undefined","react_router","Frontmatter_Frontmatter","dangerouslySetInnerHTML","__html","BlogPost_Footer_Footer","PostGrid","context","mode","All","Category","Tag","indexOf","Blog","Helmet_default","a","name","content","exact","Projects","App","react_default","createElement","Fragment","react_router_dom","CssBaseline","BlogContext_BlogProvider","ThemeProvider","Theme","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ba48c93.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport { Container, Grid, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nimport { BlogContext } from \"../../store/BlogContext\";\r\nimport { BlogPostCard } from \"../BlogPostCard\";\r\nimport { routes } from \"../../constants/routes\";\r\n\r\nenum PostGridMode {\r\n  All,\r\n  Category,\r\n  Tag\r\n}\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 3)\r\n    }\r\n  })\r\n);\r\n\r\ninterface PostGridParams {\r\n  cat: string;\r\n  tag: string;\r\n}\r\n\r\nconst PostGridBase: React.FC<RouteComponentProps<PostGridParams>> = props => {\r\n  const { location, match } = props;\r\n  const classes = useStyles();\r\n  const context = React.useContext(BlogContext);\r\n  const mode: PostGridMode =\r\n    location.pathname === routes.blog.base\r\n      ? PostGridMode.All\r\n      : location.pathname.startsWith(routes.blog.category.base)\r\n      ? PostGridMode.Category\r\n      : PostGridMode.Tag;\r\n  return (\r\n    <Container maxWidth=\"lg\" classes={{ root: classes.root }}>\r\n      <Grid container spacing={2}>\r\n        {context.posts.map(post => {\r\n          const tags = post.fields.tags.map(tag => tag.tag);\r\n          if (\r\n            mode === PostGridMode.All ||\r\n            (mode === PostGridMode.Category &&\r\n              post.fields.category.category === match.params.cat) ||\r\n            (mode === PostGridMode.Tag && tags.indexOf(match.params.tag) !== -1)\r\n          ) {\r\n            return (\r\n              <Grid item sm key={`card-${post.slug}`}>\r\n                <BlogPostCard post={post} />\r\n              </Grid>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport const PostGrid = withRouter(PostGridBase);\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       main: \"#2962ff\"\r\n//     },\r\n//     secondary: amber\r\n//   }\r\n// });\r\n\r\nconst theme = createMuiTheme();\r\n\r\nexport default theme;\r\n","export const routes = {\r\n  home: {\r\n    base: \"/\"\r\n  },\r\n  projects: {\r\n    base: \"/projects\"\r\n  },\r\n  blog: {\r\n    base: \"/blog\",\r\n    post: {\r\n      base: \"/blog/post\",\r\n      template: \"/blog/post/:slug\",\r\n      value: (slug: string) => `/blog/post/${slug}`\r\n    },\r\n    category: {\r\n      base: \"/blog/category\",\r\n      template: \"/blog/category/:cat\",\r\n      value: (cat: string) => `/blog/category/${cat}`\r\n    },\r\n    tag: {\r\n      base: \"/blog/tag\",\r\n      template: \"/blog/tag/:tag\",\r\n      value: (tag: string) => `/blog/tag/${tag}`\r\n    }\r\n  }\r\n};\r\n","import * as React from \"react\";\r\nimport { IconButton, makeStyles, AppBar, Tabs, Tab } from \"@material-ui/core\";\r\nimport { GithubCircle, LinkedinBox } from \"mdi-material-ui\";\r\nimport { Email } from \"@material-ui/icons\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { routes } from \"../constants/routes\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  appBar: {\r\n    flexDirection: \"row\"\r\n  },\r\n  tabs: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst TopBarComponent: React.FC<RouteComponentProps> = props => {\r\n  const classes = useStyles();\r\n\r\n  function handleChange(event: React.ChangeEvent<{}>, value: string) {\r\n    props.history.push(value);\r\n  }\r\n\r\n  function getTab(): string {\r\n    const path = props.location.pathname;\r\n    if (path.startsWith(routes.projects.base)) {\r\n      return routes.projects.base;\r\n    } else if (path.startsWith(routes.blog.base)) {\r\n      return routes.blog.base;\r\n    } else {\r\n      return routes.home.base;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Tabs\r\n          value={getTab()}\r\n          onChange={handleChange}\r\n          className={classes.tabs}\r\n          indicatorColor=\"secondary\"\r\n        >\r\n          <Tab label=\"Home\" value={routes.home.base} />\r\n          <Tab label=\"Projects\" value={routes.projects.base} />\r\n          <Tab label=\"Blog\" value={routes.blog.base} />\r\n        </Tabs>\r\n        <IconButton color=\"inherit\">\r\n          <GithubCircle />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\">\r\n          <LinkedinBox />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\">\r\n          <Email />\r\n        </IconButton>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TopBar = withRouter(TopBarComponent);\r\n","export const links = {\r\n  email: \"mailto:nathan@nathan-smith.org\",\r\n  github: \"https://github.com/OfficerHalf/\",\r\n  linkedin: \"https://www.linkedin.com/in/nathan-r-smith/\"\r\n};\r\n","export const bio =\r\n  \"Nathan Smith is an Associate Software Developer at Bentley Systems where he mainly writes full-stack enterprise ASP.NET Core and TypeScript + React web applications. In his spare time he plays tabletop and video games and takes pictures of his cats.\";\r\n\r\nexport const bioImage = \"https://cdn.buttercms.com/Tg7ZPzeRaOVxhFyTVImj\";\r\n","import * as React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  CardMedia,\r\n  CardHeader,\r\n  Avatar,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport { GithubCircle, LinkedinBox } from \"mdi-material-ui\";\r\nimport { MoreVert, Email } from \"@material-ui/icons\";\r\n\r\nimport { links } from \"../../constants/links\";\r\nimport { bioImage } from \"../../constants/strings\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    media: {\r\n      width: 275,\r\n      height: 275,\r\n      backgroundPosition: \"top\"\r\n    }\r\n  })\r\n);\r\n\r\nexport const Header: React.FC = props => {\r\n  const classes = useStyles();\r\n  return <CardMedia image={bioImage} classes={{ root: classes.media }} />;\r\n};\r\n\r\nexport const CondensedHeader: React.FC = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n  function handleClick(event: React.MouseEvent<HTMLElement>) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CardHeader\r\n        avatar={<Avatar src={bioImage}>NS</Avatar>}\r\n        title=\"Nathan Smith\"\r\n        action={\r\n          <IconButton onClick={handleClick}>\r\n            <MoreVert />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <Menu\r\n        id=\"about-menu\"\r\n        keepMounted\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem\r\n          component=\"a\"\r\n          href={links.github}\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n        >\r\n          <ListItemIcon>\r\n            <GithubCircle />\r\n          </ListItemIcon>\r\n          <ListItemText>Github</ListItemText>\r\n        </MenuItem>\r\n        <MenuItem\r\n          component=\"a\"\r\n          href={links.linkedin}\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n        >\r\n          <ListItemIcon>\r\n            <LinkedinBox />\r\n          </ListItemIcon>\r\n          <ListItemText>LinkedIn</ListItemText>\r\n        </MenuItem>\r\n        <MenuItem component=\"a\" href={links.email}>\r\n          <ListItemIcon>\r\n            <Email />\r\n          </ListItemIcon>\r\n          <ListItemText>Email</ListItemText>\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { CardContent, Typography } from \"@material-ui/core\";\r\n\r\nimport { bio } from \"../../constants/strings\";\r\n\r\nexport const CondensedBody: React.FC = props => (\r\n  <CardContent>{bio}</CardContent>\r\n);\r\n\r\nexport const Body: React.FC = props => (\r\n  <CardContent>\r\n    <Typography variant=\"h5\" gutterBottom>\r\n      Nathan Smith\r\n    </Typography>\r\n    {bio}\r\n  </CardContent>\r\n);\r\n","import * as React from \"react\";\r\nimport {\r\n  CardActions,\r\n  IconButton,\r\n  makeStyles,\r\n  createStyles\r\n} from \"@material-ui/core\";\r\nimport { Email } from \"@material-ui/icons\";\r\nimport { GithubCircle, LinkedinBox } from \"mdi-material-ui\";\r\n\r\nimport { links } from \"../../constants/links\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    actions: {\r\n      justifyContent: \"flex-end\"\r\n    }\r\n  })\r\n);\r\n\r\nexport const Footer: React.FC = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CardActions className={classes.actions}>\r\n      <IconButton href={links.github} target=\"_blank\" rel=\"noopener\">\r\n        <GithubCircle />\r\n      </IconButton>\r\n      <IconButton href={links.linkedin} target=\"_blank\" rel=\"noopener\">\r\n        <LinkedinBox />\r\n      </IconButton>\r\n      <IconButton href={links.email}>\r\n        <Email />\r\n      </IconButton>\r\n    </CardActions>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Card, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nimport { Header, CondensedHeader } from \"./Header\";\r\nimport { Body, CondensedBody } from \"./Body\";\r\nimport { Footer } from \"./Footer\";\r\n\r\ninterface BioCardProps {\r\n  condensed?: boolean;\r\n  flat?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 275\r\n    },\r\n    flat: {\r\n      boxShadow: \"none\"\r\n    }\r\n  })\r\n);\r\n\r\nexport const BioCard: React.FC<BioCardProps> = props => {\r\n  const { condensed = false, flat = false } = props;\r\n  const header = condensed ? <CondensedHeader /> : <Header />;\r\n  const body = condensed ? <CondensedBody /> : <Body />;\r\n  const footer = condensed ? <></> : <Footer />;\r\n  const classes = useStyles();\r\n  const rootClasses = `${condensed ? \"\" : classes.root} ${\r\n    flat ? classes.flat : \"\"\r\n  }`;\r\n  return (\r\n    <Card classes={{ root: rootClasses }}>\r\n      {header}\r\n      {body}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActionArea,\r\n  makeStyles,\r\n  createStyles,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nimport { routes } from \"../../constants/routes\";\r\nimport { BlogPost } from \"../../interfaces/BlogPost\";\r\n\r\ninterface BlogPostCardProps {\r\n  post: BlogPost;\r\n  featured?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 700\r\n    },\r\n    card: {\r\n      display: \"flex\",\r\n      minHeight: 200\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n      minWidth: 200\r\n    },\r\n    media: {\r\n      width: 200\r\n    }\r\n  })\r\n);\r\n\r\nconst BlogPostCardBase: React.FC<\r\n  BlogPostCardProps & RouteComponentProps\r\n> = props => {\r\n  const { post, history } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <CardActionArea\r\n      classes={{ root: classes.root }}\r\n      onClick={() => history.push(`${routes.blog.base}/post/${post.slug}`)}\r\n    >\r\n      <Card classes={{ root: classes.card }}>\r\n        <CardContent classes={{ root: classes.cardContent }}>\r\n          <Typography component=\"h2\" variant=\"h5\">\r\n            {post.fields.title}\r\n          </Typography>\r\n          <Typography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\r\n            {moment(post.fields.publish_date).format(\"MMM D, YYYY\")}\r\n          </Typography>\r\n          <Typography>{post.fields.summary}</Typography>\r\n        </CardContent>\r\n        {post.fields.card_image !== \"\" && (\r\n          <CardMedia\r\n            component=\"img\"\r\n            src={post.fields.card_image}\r\n            alt={post.fields.card_image_alt}\r\n            classes={{ root: classes.media }}\r\n          />\r\n        )}\r\n      </Card>\r\n    </CardActionArea>\r\n  );\r\n};\r\n\r\nexport const BlogPostCard = withRouter(BlogPostCardBase);\r\n","import Axios, { AxiosInstance } from \"axios\";\r\nimport { GetPostsResponse } from \"../interfaces/GetPostsResponse\";\r\n\r\nconst awBeans: string = \"9ffd3dad4fd54423ad22bc3ce3e1a2fd6bbc9081\";\r\n\r\nexport class butter {\r\n  private client: AxiosInstance;\r\n  constructor() {\r\n    this.client = Axios.create({\r\n      baseURL: \"https://api.buttercms.com/v2/\",\r\n      params: {\r\n        auth_token: awBeans\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPosts(): Promise<GetPostsResponse> {\r\n    return this.client\r\n      .get<GetPostsResponse>(\"pages/blog_post\", {})\r\n      .then(postData => {\r\n        return postData.data;\r\n      });\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { butter } from \"../api/butter\";\r\nimport { BlogPost } from \"../interfaces/BlogPost\";\r\n\r\ninterface ContextProps {\r\n  posts: BlogPost[];\r\n  getPosts: () => void;\r\n}\r\n\r\nexport const BlogContext = React.createContext<ContextProps>({\r\n  posts: [],\r\n  getPosts: () => {}\r\n});\r\n\r\nexport class BlogProvider extends React.Component<{}, ContextProps> {\r\n  private api: butter;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.api = new butter();\r\n    this.state = {\r\n      posts: [],\r\n      getPosts: this.getPosts\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.getPosts();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <BlogContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </BlogContext.Provider>\r\n    );\r\n  }\r\n\r\n  private getPosts(): void {\r\n    this.api.getPosts().then(postResponse => {\r\n      this.setState({ posts: postResponse.data });\r\n    });\r\n  }\r\n}\r\n\r\nexport const BlogConsumer = BlogContext.Consumer;\r\n","import * as React from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  createStyles,\r\n  useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { BioCard } from \"../BioCard\";\r\nimport { BlogPostCard } from \"../BlogPostCard\";\r\nimport { BlogContext } from \"../../store/BlogContext\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 3)\r\n    }\r\n  })\r\n);\r\n\r\nexport const Home: React.FC = props => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const condensed = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const blogContext = React.useContext(BlogContext);\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.root}>\r\n      <Grid container spacing={2}>\r\n        <Grid item sm>\r\n          <BioCard condensed={condensed} flat />\r\n        </Grid>\r\n        <Grid item container sm>\r\n          {blogContext.posts.map(post => (\r\n            <BlogPostCard post={post} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  createStyles,\r\n  Box,\r\n  Link,\r\n  Avatar,\r\n  CardHeader\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nimport { BlogPost } from \"../../interfaces/BlogPost\";\r\nimport { routes } from \"../../constants/routes\";\r\nimport { bioImage } from \"../../constants/strings\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    header: {\r\n      margin: theme.spacing(2, 0),\r\n      padding: 0\r\n    },\r\n    media: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      marginTop: \"0.35em\",\r\n      marginBottom: \"0.35em\"\r\n    }\r\n  })\r\n);\r\n\r\ninterface FrontmatterProps {\r\n  post: BlogPost;\r\n}\r\n\r\nexport const Frontmatter: React.FC<FrontmatterProps> = props => {\r\n  const { post } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Typography\r\n        variant=\"h6\"\r\n        component=\"h3\"\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n      >\r\n        <Link\r\n          component={RouterLink}\r\n          to={routes.blog.category.value(post.fields.category.category)}\r\n        >\r\n          {post.fields.category.category}\r\n        </Link>\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h4\"\r\n        component=\"h1\"\r\n        gutterBottom={post.fields.subtitle === \"\"}\r\n      >\r\n        {post.fields.title}\r\n      </Typography>\r\n      {post.fields.subtitle !== \"\" && (\r\n        <Typography\r\n          variant=\"h5\"\r\n          component=\"h2\"\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          {post.fields.subtitle}\r\n        </Typography>\r\n      )}\r\n      <CardHeader\r\n        avatar={<Avatar src={bioImage}>NS</Avatar>}\r\n        title=\"Nathan Smith\"\r\n        subheader={moment(post.fields.publish_date).format(\"MMM D, YYYY\")}\r\n        classes={{ root: classes.header }}\r\n      />\r\n      {post.fields.header_image !== \"\" && (\r\n        <Box>\r\n          <img\r\n            className={classes.media}\r\n            src={post.fields.header_image}\r\n            alt={post.fields.header_image_alt}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Chip, makeStyles, createStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { BlogPost } from \"../../interfaces/BlogPost\";\r\nimport { routes } from \"../../constants/routes\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      flexWrap: \"wrap\"\r\n    },\r\n    tag: {\r\n      marginRight: theme.spacing(1)\r\n    }\r\n  })\r\n);\r\n\r\ninterface FooterProps {\r\n  post: BlogPost;\r\n}\r\n\r\nexport const Footer: React.FC<FooterProps> = props => {\r\n  const { post } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {post.fields.tags.map(tag => (\r\n        <Chip\r\n          classes={{ root: classes.tag }}\r\n          component={Link}\r\n          to={routes.blog.tag.value(tag.tag)}\r\n          clickable\r\n          label={tag.tag}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { RouteComponentProps, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  makeStyles,\r\n  createStyles\r\n} from \"@material-ui/core\";\r\n\r\nimport { Frontmatter } from \"./Frontmatter\";\r\nimport { Footer } from \"./Footer\";\r\nimport { BlogPost as IBlogPost } from \"../../interfaces/BlogPost\";\r\nimport { BlogContext } from \"../../store/BlogContext\";\r\nimport { routes } from \"../../constants/routes\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 3),\r\n      maxWidth: 720\r\n    }\r\n  })\r\n);\r\n\r\nexport const BlogPost: React.FC<\r\n  RouteComponentProps<{ slug: string }>\r\n> = props => {\r\n  const slug = props.match.params.slug;\r\n  const classes = useStyles();\r\n\r\n  const context = React.useContext(BlogContext);\r\n  const foundPost = context.posts.find(p => p.slug === slug);\r\n\r\n  if (foundPost === undefined) {\r\n    return <Redirect to={routes.blog.base} />;\r\n  }\r\n\r\n  const post: IBlogPost = foundPost!;\r\n  return (\r\n    <Container classes={{ root: classes.root }}>\r\n      <Frontmatter post={post} />\r\n      <Typography\r\n        component=\"div\"\r\n        dangerouslySetInnerHTML={{ __html: post.fields.body }}\r\n      />\r\n      <Footer post={post} />\r\n    </Container>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport { routes } from \"../../constants/routes\";\r\nimport { BlogPost } from \"../BlogPost\";\r\nimport { PostGrid } from \"./PostGrid\";\r\n\r\nexport const Blog: React.FC = props => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Nathan Smith - Blog</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Nathan's blog is where he occasionally puts words about life, software, and Dungeons and Dragons.\"\r\n        />\r\n      </Helmet>\r\n      <Switch>\r\n        <Route exact path={routes.blog.base} component={PostGrid} />\r\n        <Route path={routes.blog.category.template} component={PostGrid} />\r\n        <Route path={routes.blog.tag.template} component={PostGrid} />\r\n        <Route path={routes.blog.post.template} component={BlogPost} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nexport const Projects: React.FC = props => <div>projects</div>;\r\n","import React from \"react\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Theme from \"./styles/Theme\";\r\nimport { routes } from \"./constants/routes\";\r\nimport { Home, Blog, Projects, TopBar } from \"./components\";\r\nimport { BlogProvider } from \"./store/BlogContext\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Helmet>\r\n          <title>Nathan Smith</title>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"Nathan Smith, software developer and amateur jort enthusiast.\"\r\n          />\r\n        </Helmet>\r\n        <CssBaseline />\r\n        <BlogProvider>\r\n          <ThemeProvider theme={Theme}>\r\n            <TopBar />\r\n            <Switch>\r\n              <Route exact path={routes.home.base} component={Home} />\r\n              <Route path={routes.projects.base} component={Projects} />\r\n              <Route path={routes.blog.base} component={Blog} />\r\n            </Switch>\r\n          </ThemeProvider>\r\n        </BlogProvider>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}